%h2.py-3
  Transcribe
  = @work.title

- if !@pages.blank?
  - page = @pages.first
  = form_tag update_page_path(page), :method => :put do
    .row
      %div.mx-auto
        = paginate @pages

    .container-lg.work-metadata
    .row
      .col
        #map{ :style => "height: 800px" }
        -# .viewer-wrapper
        -#   %iframe{:height => "800", :width => "600", :allowfullscreen => "true", "aria-label" => "image view", :frameborder => "0", :src => "#{universal_viewer_base_url}#?manifest=#{single_manifest_path(page.thumbnail)}&config=#{universal_viewer_config_url}"}
      .col
        .form-group
          %textarea.form-control.min-vh-100{:name => "page_text", :rows => "3"}
            = page.text
    .row
      .col
      .col
        %input.btn.btn-primary.float-right{:href => "#", :role => "button", :type => "submit", :value => "Update"}

    .row
      %div.mx-auto
        = paginate @pages

:javascript
  window.onload = function() {
    var map;

    map = L.map('map', {
      center: [0, 0],
      crs: L.CRS.Simple,
      scrollWheelZoom: false,
      zoom: 0
    });

    var baseLayer = L.tileLayer.iiif(
      "#{iiif_url}/2/#{page.thumbnail}/info.json"
    ).addTo(map);

    // Initialise the FeatureGroup to store editable layers
    var drawnItems = new L.FeatureGroup();
    map.addLayer(drawnItems);

    // Initialise the draw control and pass it the FeatureGroup of editable layers
    var drawControl = new L.Control.Draw({
      edit: {
        featureGroup: drawnItems
      }
    });

    map.addControl(drawControl);

    map.on(L.Draw.Event.CREATED, function (e) {
      var type = e.layerType
      var layer = e.layer;

      // Do whatever else you need to. (save to db, add to map etc)

      drawnItems.addLayer(layer);
    });
  }
